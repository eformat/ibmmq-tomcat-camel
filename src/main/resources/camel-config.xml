<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="properties" class="org.apache.camel.component.properties.PropertiesComponent">
        <property name="location" value="file:/opt/webserver/webapps/application.properties"/>
    </bean>

    <bean id="qcf1" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jms/MyQCF1"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="cache" value="true"/>
        <property name="proxyInterface" value="javax.jms.QueueConnectionFactory"/>
    </bean>

    <bean id="jmsComponent1" class="org.apache.camel.component.jms.JmsComponent">
        <property name="connectionFactory" ref="qcf1"/>
        <property name="username" value="app"/>
        <property name="password" value=""/>
        <property name="transactionManager" ref="jmstxmgr1"/>
        <property name="transacted" value="true" />
    </bean>

    <bean id="jmstxmgr1" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="qcf1"/>
    </bean>

    <bean id="txpolicy1" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="jmstxmgr1"/>
    </bean>

    <bean id="qcf2" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jms/MyQCF2"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="cache" value="true"/>
        <property name="proxyInterface" value="javax.jms.QueueConnectionFactory"/>
    </bean>

    <bean id="jmsComponent2" class="org.apache.camel.component.jms.JmsComponent">
        <property name="connectionFactory" ref="qcf2"/>
        <property name="username" value="app"/>
        <property name="password" value=""/>
        <property name="transactionManager" ref="jmstxmgr2"/>
        <property name="transacted" value="true" />
    </bean>

    <bean id="jmstxmgr2" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="qcf2"/>
    </bean>

    <bean id="txpolicy2" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="jmstxmgr2"/>
    </bean>

    <bean id="qcf3" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jms/MyQCF3"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="cache" value="true"/>
        <property name="proxyInterface" value="javax.jms.QueueConnectionFactory"/>
    </bean>

    <bean id="jmsComponent3" class="org.apache.camel.component.jms.JmsComponent">
        <property name="connectionFactory" ref="qcf3"/>
        <property name="username" value="app"/>
        <property name="password" value=""/>
        <property name="transactionManager" ref="jmstxmgr3"/>
        <property name="transacted" value="true" />
    </bean>

    <bean id="jmstxmgr3" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="qcf3"/>
    </bean>

    <bean id="txpolicy3" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="jmstxmgr3"/>
    </bean>

    <bean id="qcf4" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jms/MyQCF4"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="cache" value="true"/>
        <property name="proxyInterface" value="javax.jms.QueueConnectionFactory"/>
    </bean>

    <bean id="jmsTransactionManager4" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="qcf4"/>
    </bean>

    <bean id="jmsComponent4" class="org.apache.camel.component.jms.JmsComponent">
        <property name="connectionFactory" ref="qcf4"/>
        <property name="username" value="app"/>
        <property name="password" value=""/>
        <property name="transactionManager" ref="jmstxmgr4"/>
        <property name="transacted" value="true" />
    </bean>

    <bean id="jmstxmgr4" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="qcf4"/>
    </bean>

    <bean id="txpolicy4" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="jmstxmgr4"/>
    </bean>

    <bean id="repo" class="org.apache.camel.processor.idempotent.MemoryIdempotentRepository"/>

    <camelContext xmlns="http://camel.apache.org/schema/spring">

        <errorHandler id="defaultEH" type="DeadLetterChannel" deadLetterUri="log:dead?level=ERROR">
            <redeliveryPolicy maximumRedeliveries="5"
                              redeliveryDelay="250"
                              retryAttemptedLogLevel="INFO"
                              backOffMultiplier="2"
                              useExponentialBackOff="true"/>
        </errorHandler>

        <route id="helloRoute" errorHandlerRef="defaultEH">
            <!-- incoming requests from the servlet is routed -->
            <from uri="servlet:hello"/>
            <choice>
                <when>
                    <!-- is there a header with the key name? -->
                    <header>name</header>
                    <!-- yes so return back a message to the user -->
                    <transform>
                        <simple>Hello I am ${sysenv.HOSTNAME}. Hello ${header.name} how are you today?</simple>
                    </transform>
                    <setExchangePattern pattern="InOnly"/>
                    <loadBalance inheritErrorHandler="false">
                        <failover roundRobin="true"/>
                        <to uri="jmsComponent1:queue:DEV.QUEUE.1"/>
                        <to uri="jmsComponent2:queue:DEV.QUEUE.1"/>
                        <to uri="jmsComponent3:queue:DEV.QUEUE.1"/>
                        <to uri="jmsComponent4:queue:DEV.QUEUE.1"/>
                    </loadBalance>
                </when>
                <otherwise>
                    <!-- if no name parameter then output a syntax to the user -->
                    <transform>
                        <constant>Add a name parameter to uri, eg ?name=foo</constant>
                    </transform>
                </otherwise>
            </choice>
        </route>

        <route id="bonjourRoute" errorHandlerRef="defaultEH">
            <!-- incoming requests from the servlet is routed -->
            <from uri="servlet:bonjour"/>
            <choice>
                <when>
                    <!-- is there a header with the key name? -->
                    <header>name</header>
                    <!-- yes so return back a message to the user -->
                    <transform>
                        <simple>Bonjour I am ${sysenv.HOSTNAME}. Bonjour ${header.name} how are you today?</simple>
                    </transform>
                    <setExchangePattern pattern="InOnly"/>
                    <loadBalance inheritErrorHandler="false">
                        <failover roundRobin="true"/>
                        <to uri="jmsComponent1:queue:DEV.QUEUE.1"/>
                        <to uri="jmsComponent2:queue:DEV.QUEUE.1"/>
                        <to uri="jmsComponent3:queue:DEV.QUEUE.1"/>
                        <to uri="jmsComponent4:queue:DEV.QUEUE.1"/>
                    </loadBalance>
                </when>
                <otherwise>
                    <!-- if no name parameter then output a syntax to the user -->
                    <transform>
                        <constant>Add a name parameter to uri, eg ?name=foo</constant>
                    </transform>
                </otherwise>
            </choice>
        </route>

        <route id="consumeRoute11" errorHandlerRef="defaultEH" autoStartup="{{startConsumers}}">
            <from uri="jmsComponent1:queue:DEV.QUEUE.1"/>
            <log message="Incoming message ${header.JMSMessageID}"/>
            <idempotentConsumer messageIdRepositoryRef="repo">
                <header>JMSMessageID</header>
                <log message="Processing message ${header.JMSMessageID}"/>
            </idempotentConsumer>
        </route>

        <route id="consumeRoute21" errorHandlerRef="defaultEH" autoStartup="{{startConsumers}}">
            <from uri="jmsComponent2:queue:DEV.QUEUE.1"/>
            <log message="Incoming message ${header.JMSMessageID}"/>
            <idempotentConsumer messageIdRepositoryRef="repo">
                <header>JMSMessageID</header>
                <log message="Processing message ${header.JMSMessageID}"/>
            </idempotentConsumer>
        </route>

        <route id="consumeRoute31" errorHandlerRef="defaultEH" autoStartup="{{startConsumers}}">
            <from uri="jmsComponent3:queue:DEV.QUEUE.1"/>
            <log message="Incoming message ${header.JMSMessageID}"/>
            <idempotentConsumer messageIdRepositoryRef="repo">
                <header>JMSMessageID</header>
                <log message="Processing message ${header.JMSMessageID}"/>
            </idempotentConsumer>
        </route>

        <route id="consumeRoute41" errorHandlerRef="defaultEH" autoStartup="{{startConsumers}}">
            <from uri="jmsComponent4:queue:DEV.QUEUE.1"/>
            <log message="Incoming message ${header.JMSMessageID}"/>
            <idempotentConsumer messageIdRepositoryRef="repo">
                <header>JMSMessageID</header>
                <log message="Processing message ${header.JMSMessageID}"/>
            </idempotentConsumer>
        </route>

    </camelContext>

</beans>
